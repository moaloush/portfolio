
// global scope object cache
glob = {};

// global settings & vars
// -----------------------------------------------------------------------------------------------------------------
Typo3DefaultFrontendJs = {};
glob = {};
glob.doc = $(document);
glob.win = $(window);
glob.winW = glob.win.width();
glob.winH = glob.win.height();
glob.docH = 0;
glob.loaderactive = 0;

if (glob.winW >= 992) {
	$('body').removeClass('mobile');
} else {
	$('body').addClass('mobile');
}

glob.removeLoader = true;

// backward compatibility ie flags
glob.ie = false;
glob.ieVersion = 1000;
for (let i = 8; i <= 10; i++) {
	if (navigator.appVersion.indexOf("MSIE " + i) != -1) {
		glob.ie = true;
		glob['ie' + i] = true;
		glob.ieVersion = i;
	}
}
// ie 11
if (navigator.userAgent.match(/Trident.*rv[ :]*11\./)) {
	glob.ie = true;
	glob.ie11 = true;
	glob.ieVersion = 11;
}
if (navigator.userAgent.match(/Edge/)) {
	glob.ie = true;
	glob.ieEdge = true;
}
var _alphabetSearch;

$.fn.dataTable.ext.search.push( function ( settings, searchData ) {
    if ( ! _alphabetSearch ) { // No search term - all results shown
        return true;
    }

    if ( searchData[0].charAt(0) === _alphabetSearch || searchData[0].charAt(0) === _alphabetSearch.toLowerCase()) {
        return true;
    }

    return false;
} );
/**
 * global resizing, gets triggered before all other resizing stuff
 * use customResize event in all other bindings!
 */
glob.win.resize(function () {
	glob.winW = glob.win.width();
	glob.winH = glob.win.height();
	glob.docH = glob.doc.height();

	glob.win.trigger('customResize', {
		width: glob.winW,
		height: glob.winH,
		docHeight: glob.docH
	});
});

glob.enableDebug = true;
glob.debug = function ($content) {
	if (!glob.enableDebug) return;
	if (typeof console !== 'object') return;
	if (console.log) console.log($content);
};

glob.scrollTo = function ($target, $offset, $easing) {
	$offset = $offset || 40;
	$easing = $easing || 'easeInOutCubic';

	glob.scrollTarget.stop(true).animate(
		{
			scrollTop: $target.offset().top - $offset
		},
		{
			duration: 1300,
			easing: $easing
		}
	)
};

glob.scrollToY = function ($y, $duration) {
	$duration = $duration || 1300;
	glob.scrollTarget.stop(true).animate(
		{
			scrollTop: $y
		},
		{
			duration: $duration,
			easing: 'easeInOutCubic'
		}
	)
};

// user agent settings
// -----------------------------------------------------------------------------------------------------------------

glob.ie8 = navigator.appVersion.indexOf("MSIE 8") != -1;
glob.ie9 = navigator.appVersion.indexOf("MSIE 9") != -1;

//msGesture = window.navigator && window.navigator.msPointerEnabled && window.MSGesture;
glob.touch = ("ontouchstart" in window) || window.DocumentTouch && document instanceof DocumentTouch;

glob.ie11 = !!window.MSInputMethodContext && !glob.touch;

function getUrlParameter(sParam) {
	var sPageURL = window.location.search.substring(1);
	var sURLVariables = sPageURL.split('&');
	for (var i = 0; i < sURLVariables.length; i++) {
		var sParameterName = sURLVariables[i].split('=');
		if (sParameterName[0] == sParam) {
			return sParameterName[1];
		}
	}
	return '';
}

function isOnScreen(elem) {
	// if the element doesn't exist, abort
	if (elem.length == 0) {
		return;
	}
	var $window = jQuery(window)
	var viewport_top = $window.scrollTop()
	var viewport_height = $window.height()
	var viewport_bottom = viewport_top + viewport_height
	var $elem = jQuery(elem)
	var top = $elem.offset().top
	var height = $elem.height()
	var bottom = top + height

	return (top >= viewport_top && top < viewport_bottom) ||
		(bottom > viewport_top && bottom <= viewport_bottom) ||
		(height > viewport_height && top <= viewport_top && bottom >= viewport_bottom)
}

//var debugMSPhone = false;




(function (window, document, $) {
	'use strict';

	/**
	 * Global variables
	 */
	var
		AnchorScroll,
		App,
		AnimationHandling,
		FormHandling,
		NavHandling,
		TableHandling,
		TextHandling,
		NewsHandling,
		ContentHandling,
		Timer,
		//Counter,
		Video,
		StringHandling,
		SmoothState,
		Loader,
		Slider,
		ToolTip,
		CroppingVariants,
		Courses,
		Catalogues,
		TileFilter,
		EmptyTile,
		EmptyProjectTile,
		MobileGridSlider,
		Tabs,
		Accordion,
		Marginal,
		Portal,
		Select,
		Downloads,
		SecureFolderDownloads,
		AlphabetScroll,
		GlossaryScroll,
		ImageSlider,
		GridPosition,
		Shariff,
		ScrollTop,
		CatalogSort,
		ShowSearch,
		Gallery,
		SocialMedia,
		EmployeeAjaxSearch,
        Typo3DefaultFrontendJs;

	/**
	 * Document Ready Calls
	 */
	$(document).ready(function () {

		var glob = {};
		glob.winH = $(window).height();

		App.init();

	});

	/**
	 * App: Base application which initializes all other stuff
	 * @type {Object}
	 */
	App = {
		init: function () {
			/* Global Vars */
			glob.pageWrap = $('.wrap-page');
			glob.body = $('body');
			glob.scrollTarget = $('body, html');
			glob.navbar = $('.navbar');
			glob.navbarpostop = (glob.navbar.offset()) ? glob.navbar.offset().top : 0;
			glob.navH = glob.navbar.height();



			if (getUrlParameter('debug') == '1') {
				glob.body.addClass('debug');
				glob.body.append('<div style="background:#00ff00; height: 200px;"></div>');
			}

			// add global device classes to body
			if (glob.ie8) glob.body.addClass('ie8');
			if (glob.ie9) {
				glob.body.addClass('ie9');
			}
			if (glob.ie11) {
				glob.body.addClass('ie11');
			}
			if (glob.touch) {
				glob.body.addClass('touch');
			} else glob.body.addClass('notouch');


			this.reinit();
			try {
				SmoothState.init();
			  } catch (error) {
				console.error('SmoothState could not be initialized - probably due to missing library', error);
				// SmoothState JS needs to be disabled for a few pages so that history.back() is working
			  }
			TableHandling.init();
			EmployeeAjaxSearch.init();
			Select.init();
      Typo3DefaultFrontendJs.reinit();
			/* Container Size */
			// var changeSize = $('.change-size'),
			// 	main = glob.body.children('main');
			//
			// if (changeSize.length > 0 && Cookies.check('container-size', 'wide')) {
			// 	changeSize.addClass('wide');
			// 	main.removeClass('container').addClass('container-fluid');
			// }

		},
		reinit: function () {
			try {
				AnchorScroll.init();
				Tabs.init();
				AnimationHandling.init();
				TextHandling.init();
				NewsHandling.init();
				//ContentHandling.init();
				Timer.init();
				//Counter.init();
				Video.init();
				NavHandling.init();
				MobileGridSlider.init();
				CroppingVariants.init();
				Slider.init();
				ToolTip.init();
				TileFilter.init();
				EmptyTile.init();
				EmptyProjectTile.init();
				Courses.init();
				Catalogues.init();
				Downloads.init();
				SecureFolderDownloads.init();
				App.confirm();
				Accordion.init();
				FormHandling.init();
				Marginal.init();
				Portal.init();
				Gallery.init();
				ImageSlider.init();
				AlphabetScroll.init();
				GlossaryScroll.init();
				GridPosition.init();
				ScrollTop.init();
				CatalogSort.init();
				SocialMedia.init();
				ShowSearch.init();
                Typo3DefaultFrontendJs.reinit();
			}catch (e) {
				console.info(e)
			}
		},


		confirm: function ($confirm) {
			$confirm = $confirm || $('.confirm');
			$confirm.click(function (e) {
				var confirmButton = $(this),
					confirmMessage = confirmButton.data('confirm-message'),
					confirmLink = confirmButton.attr('href');

				e.preventDefault();
				if (confirm(confirmMessage)) {
					$(this).unbind(e);
					if (confirmLink === undefined || confirmLink === 'undefined' || confirmLink === '')
						confirmButton.trigger('click');
					else
						window.location.href = confirmLink;
				} else {
					return false;
				}
			});
		}
	};

	SocialMedia = {
		init: function () {
				$('#nav-facebook-tab').click(function () {
					$('#nav-facebook .social-feed-container.social-feed-feeditemcard').css({
					'height': '500px',
				});
			});
				$('#nav-instagram-tab').click(function () {
					$('#nav-instagram .social-feed-container.social-feed-feeditemcard').css({
					'height': '500px',
				});
			});
				$('#nav-twitter-tab').click(function () {
					$('#nav-twitter .social-feed-container.social-feed-feeditemcard').css({
					'height': '300px',
				});
			});
		}
	};

	Timer = {
		init: function () {
			Timer.alerts();
		},

		alerts: function () {
			setTimeout(function () {
				$('.typo3-messages').slideUp('slow');
			}, 5000);
		}
	};



	Loader = {
		init: function () {
			if (!glob.loaderactive) return false;
			$('#loader').show();
			$('a,.link').not('.no-loader').click(function (e) {
				var clickedOn = $(e.target);
				if (!clickedOn.hasClass('no-loader')) {
					Loader.init();
				}
			});
		},
		close: function (instant) {
			if (!glob.removeLoader) return false;
			if (typeof instant === "undefined" || instant === null) {
				instant = true;
			}

			if (instant) {
				$('#loader').hide();
			} else {
				setTimeout(function () {
					$('#loader').hide();
				}, 1000);
			}
		}
	};

	ScrollTop = {
		init: function(){
			var top = $('.b-scroll-to-top');

			top.click(function(){
				$('body,html').animate({
					scrollTop: 0
				},700, 'linear');
				return false;
			});
			$(window).scroll(function () {
				if ($(this).scrollTop() > 300) {
					top.addClass('is-visible');
				} else {
					top.removeClass('is-visible');
				}
			});
		}
	};

	CatalogSort = {
		init: function () {
			$("#link_sorting").on('click',function () {
				if ($(this).val() == "type") {
					$(this).val("alph");
					$('.category_biblio_type').css({
						display:'none',
					});
					$('.category_biblio_alph').css({
						display:'block',
					});
				}
				else {
					$(this).val("type");
					$('.category_biblio_type').css({
						display:'block',
					});
					$('.category_biblio_alph').css({
						display:'none',
					});
				}
				$(this).text(function(i, text){
					return text === "Liste alphabetisch sortieren" ? "Liste nach Datenbanktypen sortieren" : "Liste alphabetisch sortieren";
				})
			});
		}

	};


	AnchorScroll = {
		init: function() {
			var hash = window.location.hash;
			if(hash){
				AnchorScroll.pushScroll(hash);
			}
			// Added for mpm_persons detail view sidebar animation.
			$('.area-selection').on('click',function (){
				let url = $(this).attr('href');
				let section = url.substring(url.indexOf('#'));
				AnchorScroll.pushScroll(section);
			});

			$('a[href*="#"]').not('#nav-twitter-tab, #nav-instagram-tab, #nav-facebook-tab, .carousel-control-prev, .carousel-control-next, .cat_anchor, #searchContent, .pagination a, #nav-home-tab, #student-tab, .area-selection, [data-mailto-token]').on('click',function() {
				hash = $(this).attr('href');
				AnchorScroll.pushScroll(hash);

			});
		},
		pushScroll: function (hash) {
			//var hash = window.location.hash;
			if (hash)  {
				//scroll 100px up
				var target = $(hash)

				if(target.offset()) {
					$('html, body').stop().animate({
						'scrollTop': (target.offset().top)-100
					},700, 'linear');
				}
				window.location.hash = hash;
			}
		}
	};


	AnimationHandling = {
		init: function () {
			AnimationHandling.changeSlide();
		},

		changeSlide: function () {
			var changeListSlide = $('.change-list-slide'),
				listSlide = $('.list-slide'),
				storageItem = 'listSlide';


			changeListSlide.click(function () {
				var self = $(this),
					changeTo = self.data('slide');

				changeListSlide.removeClass('active');
				self.addClass('active');
				switch (changeTo) {
					case 'list':
						listSlide.removeClass('tile').addClass('list');
						window.localStorage.setItem(storageItem, 'list');
						break;
					case 'tile':
						listSlide.removeClass('list').addClass('tile');
						window.localStorage.setItem(storageItem, 'tile');
						break;
				}
			});
		}
	};


	NavHandling = {
		init: function () {
			NavHandling.sidebar();
			NavHandling.slidedown();
			NavHandling.iAm();
			NavHandling.mobileMenu();
			NavHandling.iAmContentHandling();
			//NavHandling.iAmMobile();
			NavHandling.mobileDropdown();
			NavHandling.quickdown();
		},

		iAm: function () {
			// Back Navigation
			$(' .iam-items .back_link_item').on('click',function(){
				var action = $(this).attr('href'),
					uid = $(this).data('parent'),
					backId = $(this).data('backid'),
					prev = $('.iam-prev'),
					current = $('.iam-curr'),
					next = $('.iam-next');

				prev.html('');
				next.html('');
				console.log('iamback');
				$.ajax({
					url: action,
					type: 'POST',
					data: {
						iAmId: uid,
						backId:backId,
						menu:'iam',
					},
					success: function (data) {


						prev.html(data);
						current.removeClass('iam-curr');
						current.addClass('iam-next');
						prev.removeClass('iam-prev');
						prev.addClass('iam-curr');
						next.removeClass('iam-next');
						next.addClass('iam-prev');
						prev.find('a')[0].focus();
						//$('#searchbox .iam-menu').height($('.iam-curr').outerHeight());
						NavHandling.iAm();

					},
				});
			});
			// Forward Navigation
			$(' .iam-items .next-page').on('click',function(){
				var action = $(this).attr('href'),
					uid = $(this).data('child'),
					backId = $(this).data('backid'),
					prev = $('.iam-prev'),
					current = $('.iam-curr'),
					next = $('.iam-next');

				prev.html('');
				next.html('');
				$.ajax({
					url: action,
					type: 'POST',
					data: {
						iAmId: uid,
						backId:backId,
						menu:'iam',

					},
					success: function (data) {

						next.html(data);
						current.removeClass('iam-curr');
						current.addClass('iam-prev');
						next.removeClass('iam-next');
						next.addClass('iam-curr');
						prev.removeClass('iam-prev');
						prev.addClass('iam-next');
						next.delay(700).fadeIn(function() {
							next.find('a')[0].focus();
						});
						//$('#searchbox .iam-menu').height($('.iam-curr').outerHeight());
						NavHandling.iAm();
					}
				});
			})
		},

		quickdown: function () {
			var nav = $('#navi-meta'),
				navItem = nav.children('li.nav-item');

			navItem.on('touchstart', function (e) {
				'use strict';
				var self = $(this), selfLink = self.children('.nav-link'), selfDD = self.children('.dropdown-menu');

				if (self.hasClass('show')) {
					return true;
				} else {
					$('.navbar').removeClass('show');
					$('#navi-main li.nav-item').removeClass('show');
					$('#navi-main .nav-link').attr('aria-expanded', false);
					$('#navi-main .dropdown-menu').removeClass('show');

					self.parents('.navbar').addClass('show');
					self.addClass('show');
					selfLink.attr('aria-expanded', true);
					selfDD.addClass('show');

					e.preventDefault();
					return false;
				}

			});


			$('.dropdown-toggle').on('click', function () {
				$('.haw-90-b').toggleClass('haw-270-b');

			});

			navItem.on('click', function(e) {
				var isSub = $(this).find('.dropdown-menu').length

				var self = $(this), selfLink = self.children('.nav-link'), selfDD = self.children('.dropdown-menu');

				if (isSub > 0) {
					//e.preventDefault();

					var dropD = $(this).find('.dropdown-menu');
					$(dropD).mouseleave(function() {
						self.removeClass('show');
						selfLink.attr('aria-expanded', false);
						selfDD.removeClass('show');
						$('.slider-menu').children('div').removeClass('active');
						$('.slider-menu').children('ul').addClass('active');

					});
				}

				if (self.hasClass('show')) {
					self.removeClass('show');
					selfLink.attr('aria-expanded', false);
					selfDD.removeClass('show');
				} else {
					self.addClass('show');
					selfLink.attr('aria-expanded', true);
					selfDD.addClass('show');
				}
			});


		},

		// iAmMobile: function () {
		// 	// Back Navigation
		// 	$('.navbar-mobile .iam-items .back_link_item').on('click',function(){
		// 		console.log('iamback');
		// 		var action = $(this).attr('href'),
		// 			uid = $(this).data('parent'),
		// 			backId = $(this).data('backid'),
		// 			prev = $('.navbar-mobile .iam-prev'),
		// 			current = $('.navbar-mobile .iam-curr'),
		// 			next = $('.navbar-mobile .iam-next');
		//
		// 		prev.html('');
		// 		next.html('');
		// 		$.ajax({
		// 			url: action,
		// 			type: 'POST',
		// 			data: {
		// 				iAmId: uid,
		// 				backId:backId,
		// 				menu:'iam',
		// 			},
		// 			success: function (data) {
		// 				prev.html(data);
		// 				current.removeClass('iam-curr');
		// 				current.addClass('iam-next');
		// 				prev.removeClass('iam-prev');
		// 				prev.addClass('iam-curr');
		// 				next.removeClass('iam-next');
		// 				next.addClass('iam-prev');
		// 				console.log(prev);
		// 				prev.find('a')[0].focus();
		// 				//$('#searchbox .iam-menu').height($('.iam-curr').outerHeight());
		// 				NavHandling.iAm();
		//
		// 			},
		// 		});
		// 	});
		// 	// Forward Navigation
		// 	$('.navbar-mobile .iam-items .next-page').on('click',function(){
		// 		var action = $(this).attr('href'),
		// 			uid = $(this).data('child'),
		// 			backId = $(this).data('backid'),
		// 			prev = $('.navbar-mobile .iam-prev'),
		// 			current = $('.navbar-mobile .iam-curr'),
		// 			next = $('.navbar-mobile .iam-next');
		//
		// 		prev.html('');
		// 		next.html('');
		// 		$.ajax({
		// 			url: action,
		// 			type: 'POST',
		// 			data: {
		// 				iAmId: uid,
		// 				backId:backId,
		// 				menu:'iam',
		//
		// 			},
		// 			success: function (data) {
		//
		// 				next.html(data);
		// 				current.removeClass('iam-curr');
		// 				current.addClass('iam-prev');
		// 				next.removeClass('iam-next');
		// 				next.addClass('iam-curr');
		// 				prev.removeClass('iam-prev');
		// 				prev.addClass('iam-next');
		// 				next.delay(700).fadeIn(function() {
		// 					next.find('a')[0].focus();
		// 				});
		// 				//$('#searchbox .iam-menu').height($('.iam-curr').outerHeight());
		// 				NavHandling.iAm();
		// 			}
		// 		});
		// 	})
		// },

		iAmContentHandling: function () {
			if ($('.iAm').length <= 0) return false;

			var iAm = $('.iAm'),
				iAmFirst = iAm.find('[name="iAm"]'),
				iAmSecond = iAm.find('.iAmLink'),

				iAmLinks = iAm.find('.iAmLinks'),

				iAmButton = iAm.find('button');


			$(function () {
				iAmFirst.change();
			});

			iAmFirst.change(function () {
				var self = $(this),
					selfVal = self.val(),
					options = iAmLinks.find('#ial-' + selfVal.split('|')[0]).find('option').clone(),
					defaultOption = $('<option value="0">Bitte wählen ...</option>');

				if (options.length > 0) {
					iAmSecond.removeAttr('disabled').html(options);
				} else {
					iAmSecond.attr('disabled', 'disabled').html(defaultOption);
				}
			});

			iAmButton.click(function () {
				if (iAmSecond.is(':enabled') && iAmSecond.val() != 0) {
					var iAmLink = iAmSecond.val().split('|')[1];
					window.location.href = iAmLink;
				}
			});
		},

		slidedown: function () {

			// on first focus (bubbles up to document), open the menu

			//main navigation focus view
			$(".nav-link").on("focus",function(e) {
				var self = $(this).parent('.nav-item'),
					selfLink = self.children('.nav-link'),
					selfDD = self.children('.dropdown-menu');

				if (self.hasClass('show')) {
					if($('#navi-meta .nav-link').has('focus')) {
						$('#navi-main li.nav-item').removeClass('show');
						$('#navi-main .dropdown-menu').removeClass('show');
						$('#navi-main .nav-link').attr('aria-expanded', false);
					}
					return true;
				} else {
					$('.navbar').removeClass('show');
					$('#navi-main li.nav-item').removeClass('show');
					$('#navi-main .nav-link').attr('aria-expanded', false);
					$('#navi-main .dropdown-menu').removeClass('show');

					self.parents('.navbar').addClass('show');
					self.addClass('show');
					selfLink.attr('aria-expanded', true);
					selfDD.addClass('show');

					e.preventDefault();
					return false;
				}
			});



			var nav = $('#navi-main'),
				navItem = nav.children('li.nav-item:not(.search)');

            navItem.on('touchstart', function (e) {
                'use strict';
                var self = $(this), selfLink = self.children('.nav-link'), selfDD = self.children('.dropdown-menu');

                if (self.hasClass('show')) {
                    return true;
                } else {
                    $('.navbar').removeClass('show');
                    $('#navi-main li.nav-item').removeClass('show');
                    $('#navi-main .nav-link').attr('aria-expanded', false);
                    $('#navi-main .dropdown-menu').removeClass('show');

                    self.parents('.navbar').addClass('show');
                    self.addClass('show');
                    selfLink.attr('aria-expanded', true);
                    selfDD.addClass('show');

                    e.preventDefault();
                    return false;
                }
            });


            var timer;

			navItem.hover(function () {
				var self = $(this), selfLink = self.children('.nav-link'), selfDD = self.children('.dropdown-menu');
                timer = setTimeout(function() {
                    self.addClass('show');
                    selfLink.attr('aria-expanded', true);
                    selfDD.addClass('show');

					$('#startSettings').parent().removeClass('show');
					$('#startSettings').siblings().removeClass('show');
					$('#startSettings').attr('aria-expanded', false);
                }, 300);
			}, function () {
				var self = $(this), selfLink = self.children('.nav-link'), selfDD = self.children('.dropdown-menu');

                clearTimeout(timer);
                    self.removeClass('show');
                    selfLink.attr('aria-expanded', false);
                    selfDD.removeClass('show');
				$('.slider-menu').children('div').removeClass('active');
				$('.slider-menu').children('ul').addClass('active');

			});

			// TOUCH CLOSE MEGAMENU
            $('body.touch .touch-close').on('click', function() {
                clearTimeout(timer);
                $('.navbar').removeClass('show');
                $('#navi-main li.nav-item').removeClass('show');
                $('#navi-main .nav-link').attr('aria-expanded', false);
                $('#navi-main .dropdown-menu').removeClass('show');
                e.preventDefault();
                return false;
			})
		},

		sidebar: function () {
			// Back Navigation
			$('.sidebar-items .back_link_item').on('click',function(){
				var action = $(this).attr('href'),
					uid = $(this).data('parent'),
					entryLevel = $(this).data('entrylevel'),
					prev = $('.sidebar-prev'),
					current = $('.sidebar-curr'),
					next = $('.sidebar-next');

				prev.html('');
				next.html('');
				$.ajax({
					url: action,
					type: 'POST',
					data: {
						uid: uid,
						entryLevel:entryLevel,
						menu:'sidebar',
					},
					success: function (data) {


						prev.html(data);
						current.removeClass('sidebar-curr');
						current.addClass('sidebar-next');
						prev.removeClass('sidebar-prev');
						prev.addClass('sidebar-curr');
						next.removeClass('sidebar-next');
						next.addClass('sidebar-prev');
						NavHandling.sidebar();
					},
				});
			});
			// Forward Navigation
			$('.sidebar-items .next-page').on('click',function(){
				var action = $(this).attr('href'),
					uid = $(this).data('child'),
					entryLevel = $(this).data('entrylevel'),
					prev = $('.sidebar-prev'),
					current = $('.sidebar-curr'),
					next = $('.sidebar-next');

				prev.html('');
				next.html('');
				$.ajax({
					url: action,
					type: 'POST',
					data: {
						uid: uid,
						entryLevel:entryLevel,
						menu:'sidebar',

					},
					success: function (data) {

						next.html(data);
						current.removeClass('sidebar-curr');
						current.addClass('sidebar-prev');
						prev.removeClass('sidebar-prev');
						prev.addClass('sidebar-next');
						next.removeClass('sidebar-next');
						next.addClass('sidebar-curr');
						next.find('a')[0].focus();
						NavHandling.sidebar();
					},
				});
			});
		},

		mobileMenu: function () {
			NavHandling.mobileOptions();
			NavHandling.mobileQuickmenu();
			// Back Navigation
			$('.mobile-items .back_link_item').on('click',function(){
				var action = $(this).attr('href'),
					uid = $(this).data('parent'),
					menuId = $(this).data('menuid'),
					prev = $('.mobile-prev'),
					current = $('.mobile-curr'),
					next = $('.mobile-next');
				prev.html('');
				next.html('');
				$.ajax({
					url: action,
					type: 'POST',
					data: {
						uid: uid,
						menu:'mobile',
						menuId:menuId,
					},
					success: function (data) {


						prev.html(data);
						current.removeClass('mobile-curr');
						current.addClass('mobile-next');
						prev.removeClass('mobile-prev');
						prev.addClass('mobile-curr');
						next.removeClass('mobile-next');
						next.addClass('mobile-prev');
						prev.find('a')[0].focus();
						NavHandling.mobileMenu();

					},
				});
			});

			// Forward Navigation
			$('.mobile-items .next-page').on('click',function(){

				var action = $(this).attr('href'),
					uid = $(this).data('child'),
					prev = $('.mobile-prev'),
					current = $('.mobile-curr'),
					menuId = $(this).data('menuid'),
					next = $('.mobile-next');
				prev.html('');
				next.html('');

				$.ajax({
					url: action,
					type: 'POST',
					data: {
						uid: uid,
						menu:'mobile',
						menuId:menuId
					},
					success: function (data) {

						next.html(data);
						current.removeClass('mobile-curr');
						current.addClass('mobile-prev');
						prev.removeClass('mobile-prev');
						prev.addClass('mobile-next');
						next.removeClass('mobile-next');
						next.addClass('mobile-curr');
						next.find('a')[0].focus();
						NavHandling.mobileMenu();
					},
				});
			})

		},


		mobileQuickmenu: function () {
			var button = $('.mobile-quicklinks-button'),
				menu = $('.mobile-quickmenu'),
				navClose = $('.nav-close'),
				close = $('.quick-close');

			button.click(function () {
				navClose.hide();
				close.show();
				menu.height($('.mobile-curr').height());
				menu.show();
				$(".navbar-inner-container").scrollTop(0);
				menu.stop().animate({
					top: 0
				});


			});
			close.click(function () {
				close.hide();
				navClose.show();
				menu.stop().animate({
					top: '100%'
				},function(){
					menu.hide();
				});

			});
		},


		mobileOptions: function () {
			var button = $('.mobile-options-button'),
				menu = $('.mobile-options'),
				navClose = $('.nav-close'),
				close = $('.quick-close');

			button.click(function () {
				navClose.hide();
				close.show();
				menu.height($('.mobile-curr').height());
				menu.show();
				menu.stop().animate({
					top: 0
				});


			});
			close.click(function () {
				close.hide();
				navClose.show();
				menu.stop().animate({
					top: '100%'
				},function(){
					menu.hide();
				});

			});
		},

		mobileDropdown: function () {
			$('#accordionNavMobile .card-header a').on('focus', function () {
				$(this).parent().toggleClass('open');
				$(this).parent().siblings().toggleClass('show');
				$(this).siblings().toggleClass('collapsed');
				if($(this).siblings().hasClass('collapsed')) {
					$(this).siblings().attr('aria-expanded','false');
				} else {
					$(this).siblings().attr('aria-expanded','true');
				}
			});

		},
	};

	FormHandling = {
		init: function () {

			$('.datetimepicker').datetimepicker({
				locale: 'de',
				format: 'DD.MM.YYYY'
			});


		},

		valideForm: function () {
			var forms = $('.needs-validation');
			// Loop over them and prevent submission
			var validation = Array.prototype.filter.call(forms, function (form) {
				// $(form).submit(function (event) {
				// 	console.log(event);
				// });
				form.addEventListener('submit', function (event) {
					// console.log(event);
					if (form.checkValidity() === false) {
						event.preventDefault();
						event.stopPropagation();
						glob.scrollToY(0, 500);
					}
					form.classList.add('was-validated');

					var navTab = $('.was-validated').find(':invalid').parents('.tab-pane');
					navTab.each(function () {
						var selfTab = $(this);

						$('#' + selfTab.attr('id') + '-tab').addClass('invalide');
					});

				}, false);
			});
		},

		afterSend: function () {
		}
	};

	TableHandling = {
		init: function () {

			var lang,langl,all;
			if($('html')[0].lang =='de-DE') {
				lang = "Keine Einträge gefunden.";
				langl = "<p class='entry'>Einträge anzeigen.</p>";
				all = "Alle";
				$.fn.dataTable.ext.order.htmlIntl('de-DE-u-co-phonebk');
				$.fn.dataTable.ext.order.intl('de-DE-u-co-phonebk');
			}
			else {
				lang = "No entries found.";
				langl = "<p class='entry'>Show entries.</p>";
				all = "All";
				$.fn.dataTable.ext.order.htmlIntl("en-GB");
				$.fn.dataTable.ext.order.intl("en-GB");
			}

			var addCourseOptions = {
				language: {
					"sZeroRecords": lang
				},
				paging: false,
				autoWidth: true,
				info: false,
				order: [
					[0, "asc"],
				],
				columnDefs: [
					{
						'targets': '_all',
						'orderable': true,
						'searchable': true
					},
				]
			};
            var addProjectOptions = {
				language: {
					"sZeroRecords": lang
				},
                paging: false,
                autoWidth: true,
                info: false,
                order: [[0, "asc"]],
                columnDefs: [
                    {
                        'targets': '_all',
                        'orderable': true,
                        'searchable': true
                    },
                ],
            };

            var addProjectSort = {
				language: {
					"sZeroRecords": lang
				},
                paging: false,
                autoWidth: true,
                info: false,
                order: [[4, "desc"]],
                columnDefs: [
                    {
                        'targets': '_all',
                        'orderable': true,
                        'searchable': true
                    },
                ],
            };

			var addEmployeeOptions = {
				paging: true,
				autoWidth: true,
				info: false,
				order: [[0, "asc"]],
				columnDefs: [
					{
						'targets': '_all',
						'orderable': true,
						'searchable': true
					},
				],
			};

            var addPersonOptions = {
				language: {
					lengthMenu: '<select>'+

						'<option value="10">10</option>'+
						'<option value="25">25</option>'+
						'<option value="50">50</option>'+
						'<option value="-1">'+all+'</option>'+
						'</select> '+langl,
					paginate: {
						next: "&gt;&gt;",
						previous: "&lt;&lt;",
					},

				},
	            lengthMenu: [ 50, 10, 25, -1 ],
	            paging: true,
                autoWidth: true,
                info: false,
                order: [[0, "asc"]],
                columnDefs: [
                    {
                        'targets': '_all',
                        'orderable': true,
                        'searchable': true
                    },
                ],
				/*drawCallback:function(oSettings) {
					var pages = this.api().page.info().pages;
					var showfilter = jQuery('.tx-mpm-persons .table-responsive').data('showfilter');
					if(showfilter == 1) {
						jQuery('.dataTables_paginate').hide();
						jQuery('.dataTables_length').hide();
					}
					else {
						if(pages == 1){
							jQuery('.dataTables_paginate').hide();
						}
						else {
							jQuery('.dataTables_paginate').show();
						}
					}
                }*/
            };
            var addPersonFilterOptions = {
				paging: false,
                autoWidth: true,
                info: false,
                order: [[0, "asc"]],
                columnDefs: [
                    {
                        'targets': '_all',
                        'orderable': true,
                        'searchable': true
                    },
                ],
            };

			var addJobofferOptions = {
				paging: false,
				autoWidth: false,
				info: false,
				order: [[0, "desc"]],
				columnDefs: [
					{
						'targets': '_all',
						'orderable': true,
						'searchable': false
					},
				],
			};

            var eventOptions = {
                language: {
                    "sZeroRecords": lang
                },
                paging: false,
                //autoWidth: false,
                info: false,
                order: [[1, "asc"],[2, "asc"]],
                //searching: false,
                columnDefs: [
                    {
                        'targets': [2],
                        'orderData': [1, 2]
                    },
                ],
            };

			var generalOptions = {
				language: {
					"sZeroRecords": lang
				},
				paging: false,
				//autoWidth: false,
				info: false,
				order: [[0, "asc"]],
				//searching: false,

		};

			if($('#person_filter_table').hasClass('no_order') || $('#person_table').hasClass('no_order')){
				addPersonFilterOptions.order = [];
				addPersonOptions.order = [];
			}
			var pTableDomEl = $('#person_table');
			var projectTable;
			if($('.tx-mpm-projects .list-slide').hasClass('startdate')){
				projectTable = TableHandling.dataTable($('#project_table'), addProjectSort);
			} else {
				projectTable = TableHandling.dataTable($('#project_table'), addProjectOptions);
			}

			$('.project_custom_table').each(function (index,value) {
				let tableDomid = $(this).attr('id');
				let addProjectSort = {
					language: {
						"sZeroRecords": lang
					},
					paging: false,
					autoWidth: true,
					info: false,
					order: [[4, "desc"]],
					searching: false,
					columnDefs: [
						{
							'targets': '_all',
							'orderable': true,
							'searchable': true
						},
					],
				};
				if($(this).hasClass('startdate')){
					TableHandling.dataTable($('#'+tableDomid), addProjectSort);
				}else {
					addProjectSort.order = [[0, "asc"]];
					TableHandling.dataTable($('#'+tableDomid), addProjectSort);
				}
			});


			var pTableDomElTbody = pTableDomEl.find('tbody');

			var courseTable = TableHandling.dataTable($('#course_table'), addCourseOptions);
            var employeeTable = TableHandling.dataTable($('#employee_table'), addEmployeeOptions);
			window.personTable = TableHandling.dataTable(pTableDomEl, addPersonOptions);
            var personFilterTable = TableHandling.dataTable($('#person_filter_table'), addPersonFilterOptions);
			var jobofferTable = TableHandling.dataTable($('#joboffer_table'), addJobofferOptions);
			var partnerTable = TableHandling.dataTable($('#partner_table'), generalOptions);
			var consultantTable = TableHandling.dataTable($('#consultant_table'), generalOptions);
			var internshipTable = TableHandling.dataTable($('#internship_table'), generalOptions);

            // This is the new dataTable SingleObject Init function
            // ToDo: Add the other stupid dataTable
            var initNewDataTableSingleObject = function (element) {
                element.each(function () {
                    let dataListId = $(this).data('list');
                    let finalTableSelect = '.js-table-select__' + dataListId;
                    let dataTable = TableHandling.dataTable($(finalTableSelect + ' #js-datatable-' + dataListId), eventOptions);

                    // Disable the search filter input from dataTable
                    $('#js-datatable-' + dataListId + '_filter').css('display', 'none')

                    $(this).find('.filter_search').keyup(function () {
                        searchString = $(this).val();
                        dataTable.search(searchString).draw();
                    });

                    $(this).find('.filter').each(function () {
                        $(this).change(function () {
                            let self = $(this),
                                col = '.' + self.attr('data-col'),
                                val = self.val();

                            dataTable.columns((col)).search(val, true, false).draw();
                        });
                    });
                });
            };
            initNewDataTableSingleObject($('.js-table-select.js-table-select__event'))

			let searchString = '';
			$('.filter_search').keyup(function () {
				searchString = $(this).val();

				courseTable.search($(this).val()).draw();
				projectTable.search($(this).val()).draw();
                employeeTable.search($(this).val()).draw();
				personTable.search($(this).val()).draw();
				personFilterTable.search($(this).val()).draw();
				partnerTable.search($(this).val()).draw();
				consultantTable.search($(this).val()).draw();
				internshipTable.search($(this).val()).draw();
				TileFilter.init();
				EmptyTile.init();
				EmptyProjectTile.init();
			});

			$('.filter').change(function (e) {
				$('select.filter').each(function () {

                    var self = $(this),
						col = '.' + self.attr('data-col'),
						val = self.val(),
						regex = '\\b' + val + '\\b';
					if($(col).hasClass('multi') && val){
						regex =  ';' + val + ';';
					}
					if($('html')[0].lang ==='de-DE') {
						projectTable.columns((col)).search(regex, true, false).draw();
					} else {
						projectTable.columns((col)).search(val, true, false).draw();
					}

					courseTable.columns((col)).search(regex, true, false).draw();
                    employeeTable.columns((col)).search(regex, true, false).draw();
					personTable.columns((col)).search(val, true, false).draw();
					personFilterTable.columns((col)).search(val, true, false).draw();
					partnerTable.columns((col)).search(val, true, false).draw();
					consultantTable.columns((col)).search(regex, true, false).draw();
					internshipTable.columns((col)).search(regex, true, false).draw();

					if ( val === '0' ){
                        personTable.search( '' ).columns().search( '' ).draw();
						personFilterTable.search( '' ).columns().search( '' ).draw();
                    }
				});
				TileFilter.init();
				EmptyTile.init();
				EmptyProjectTile.init();
			});

			// }

			var graduation = decodeURIComponent(getUrlParameter('graduation'));

			if (graduation) {
				$('select.filter[data-col="graduation"]').val(graduation.replace(/\+/g,' ')).trigger('change');

			}

			var subject = decodeURIComponent(getUrlParameter('subject'));
			if (subject) {
				$('select.filter[data-col="subjects"]').val(subject.replace(/\+/g,' ')).trigger('change');
			}

            var alphabet = $('<div class="alphabet"/>');

            var test = $('<span class="clear active"/>')
	            .data( 'letter', '' )
                .html( 'A-Z' )
                .appendTo( alphabet );


            for ( var i=0 ; i<26 ; i++ ) {
                var letter = String.fromCharCode( 65 + i );

                $('<span/>')
                    .data( 'letter', letter )
                    .html( letter )
                    .appendTo( alphabet );
            }
            $('.alphabet-container').append(alphabet)

            alphabet.on( 'click', 'span', function () {

                alphabet.find( '.active' ).removeClass( 'active' );
                $(this).addClass( 'active' );

                _alphabetSearch = $(this).data('letter');
                personTable.draw();
				personFilterTable.draw();
	            TileFilter.init();
				EmptyTile.init();
				EmptyProjectTile.init();
            } );

		},

		dataTable: function ($dt, $additionalOptions, $options) {
			$dt = $dt || $('.dataTable');
			$additionalOptions = $additionalOptions || {};
			$options = $options || {
				order: [
					[1, 'asc']
				],
				responsive: true,
				"language": {
					"url": "//cdn.datatables.net/plug-ins/9dcbecd42ad/i18n/German.json",
				}
			};
			$.extend($options, $additionalOptions);

			var dtable = $dt.DataTable($options);

			return dtable;
		}
	};

	EmployeeAjaxSearch = {
		init: function() {



			var addPersonSearchOptions = {
				paging: false,
				autoWidth: false,
				info: false,
				scrollX: false,
				scrollY: false,
				order: [[0, "asc"]],
				columnDefs: [
					{
						'targets': '_all',
						'orderable': true,
						'searchable': true
					},
				],
			};
			var personSearchTable = TableHandling.dataTable($('#person_search_table'), addPersonSearchOptions);

			let searchString = '';
			$('.filter_search').keyup(function () {
				searchString = $(this).val();
				personSearchTable.search(searchString).draw();
			});

			personSearchTable.on( 'search', function () {
				let wrapper = $('#person_search_table_wrapper');
				let innerWrapper = $('#person_search_table');
				if (searchString.length > 2) {
					wrapper.fadeIn();
					innerWrapper.fadeIn();
				} else {
					wrapper.fadeOut();
					innerWrapper.fadeOut();
				}
			});
		}
	};

	TextHandling = {
		init: function () {
			$(".filter_tile .course_text a").dotdotdot({
				height: 65
			});
			$(".filter_tile .project_text a").dotdotdot({
				height: 65
			});
			$(".messages-overview .text, .messages-overview .title").dotdotdot({
				height: 48
			});
		}
	};

	TileFilter = {
		init: function () {
			if ($('.dataTable').length) {
				$('.filter_tile').hide();
				$('.list_object').each(function () {
					var id = $(this).attr('data-filter');
					$('.filter_tile[data-filter="' + id + '"]').show();
				})
			}

		}
	};

	EmptyTile = {
		init: function () {
			if($('.course-slide .tile').find('.filter_tile').is(':visible')) {
				$('.empty_tiles').css( {
					'display': 'none',
				});
			}
			else {
				$('.empty_tiles').css( {
					'display':'block',
					'font-size': '1em',
					'vertical-align': 'middle',
					'color': '#003ca0',
					'font-family': 'Open Sans bold',
				});
			}
		}
	};

	EmptyProjectTile = {
		init: function () {
			if($('.project-slide .tile').find('.filter_tile').is(':visible')) {
				$('.empty_project_tiles').css( {
					'display': 'none',
				});
			}
			else {
				$('.empty_project_tiles').css( {
					'display':'block',
					'font-size': '1em',
					'vertical-align': 'middle',
					'color': '#003ca0',
					'font-family': 'Open Sans bold',
				});
			}
		}
	}

	NewsHandling = {
		init: function () {
			var button = $('.read_more');

			button.on('click', function (e) {
				e.preventDefault();
				var text = $(this).find('.read_more_text, .read_less_text');
				text.toggle();
				var trigger = $(this).attr('data-trigger');
				var expanded = $(this).attr('aria-expanded');
				if (expanded == "true")
				{
					expanded = "false"
				} else {
					expanded = "true"
				}
				$(this).attr("aria-expanded", expanded);
				$(this).innerHTML = "aria-expanded =" + expanded;
				$('#' + trigger).slideToggle();
			})
		},
	};

	ContentHandling = {
		init: function () {
			ContentHandling.sidebar();
		},

		sidebar: function () {
			var sideBarContainer = $('#side-bar'),
				contentElements = $('.theme-showcase > div').first(),
				breadcrumbElement = $('[aria-label="breadcrumb"]');

			if (contentElements.attr('class') && contentElements.attr('class').indexOf('bgcolor-') >= 0) contentElements = $('.theme-showcase > div > div.container').first();
			else contentElements = $('.theme-showcase > div.container').first();

			if (sideBarContainer.length > 0) {
				if (contentElements.length > 0) {
					contentElements.first().wrapInner('<div class="row sidebarWrap"><div class="col-lg-9 float-right"></div></div>');
					contentElements.first().find('.sidebarWrap').prepend(sideBarContainer);
				} else {
					breadcrumbElement.after('<div class="row sidebarWrap"></div>');
					breadcrumbElement.parent().find('.sidebarWrap').prepend(sideBarContainer);
				}
			}
		},
	};
	SmoothState = {
		init: function () {
			'use strict';
			var options = {
				anchors: '.smoothState',
				blacklist: 'form',
				allowFormCaching: true,
				prefetch: false,
				cacheLength: 2,
				onBefore: function () {

					localStorage.setItem('scrollPos', $(window).scrollTop());


					$('select.project_filter').each(function () {
						var col = $(this).attr('data-col');
						var val = $(this).val();

						localStorage.setItem(col, val);
					});

				},
				onStart: {

					duration: 250, // Duration of our animation
					render: function ($container) {
						$('#loader').show();
						// Add your CSS animation reversing class
						$container.addClass('m-scene');
						$container.addClass('is-exiting');

						// Restart your animation
						smoothState.restartCSSAnimations();

						localStorage.setItem('url', window.location.href);

					}
				},
				onReady: {
					duration: 0,
					render: function ($container, $newContent) {
						// Remove your CSS animation reversing class
						$('#loader').hide();
						$container.removeClass('is-exiting');

						// Inject the new content
						$container.html($newContent);
					}
				},

				onAfter: function ($container, $newContent) {
					App.reinit();
					TableHandling.init();
					Select.reinit();
					Shariff.reinit();
					if (localStorage.getItem('url') == window.location.href) {
						$('html, body').animate({
							scrollTop: localStorage.getItem('scrollPos')
						}, 0);
					}

					// #4215: Firefox bug workaround https://bugzilla.mozilla.org/show_bug.cgi?id=668213
					var hash = window.location.hash;
					if (hash) {
						var scrollTo = $(hash).offset().top + "px";

						$('html, body').stop().animate({
							scrollTop: scrollTo
						}, 0);
					}
				}
			},
			smoothState = $('#smoothStateContainer').smoothState(options).data('smoothState');


		}
	};
	Shariff = {
		reinit: function(){
			$('.shariff').each(function() {
				if (!this.hasOwnProperty('shariff')) {
					this.shariff = new Shariff(this);
				}
			});
			var videos = document.getElementsByClassName('video-shariff-play'), i = 0;
			for (i; i < videos.length; i++) {
				videos[i].onclick = function(event){event.preventDefault(); Shariff.replaceVideo(event);};
			}
		},

		replaceVideo: function(event) {
		var previewLink = event.target;
		while (previewLink.className !== 'video-shariff-play') {
			previewLink = previewLink.parentElement;
		}
		previewLink.outerHTML = previewLink.dataset.html;
	}
	}

	Video = {
		init: function () {
			var	videoMethods = {
                renderVideoPlayButton: function (videoWrap) {
                    let video = videoWrap.getElementsByTagName('video');

                    this.formatVideoPlayButton(videoWrap);
                    video[0].classList.add('has-media-controls-hidden');
                    let videoPlayButton = videoWrap.getElementsByClassName('video-overlay-play-button')[0];
                    videoPlayButton.addEventListener(
                        'click',
                        this.hideVideoPlayButton,
                    );
                },

                formatVideoPlayButton: function (videoWrap) {
                    videoWrap.insertAdjacentHTML('beforeend', '\
                <svg class="video-overlay-play-button" viewBox="0 0 200 200" alt="Play video">\
                    <circle cx="100" cy="100" r="90" fill="none" stroke-width="15" stroke="#fff"/>\
                    <polygon points="70, 55 70, 145 145, 100" fill="#fff"/>\
                </svg>\
                ')
                },

                hideVideoPlayButton: function () {
                    let video = this.parentElement.getElementsByTagName('video')[0];
                    video.play();
                    this.classList.add('is-hidden');
                    video.classList.remove('has-media-controls-hidden');
                    video.setAttribute('controls', 'controls')
                },
                showVideoPlayButton: function () {
                    let video = this.parentElement.getElementsByTagName('video')[0];
                    video.pause();
                    this.classList.remove('is-hidden');
                    video.classList.add('has-media-controls-hidden');
                    video.setAttribute('controls', 'controls')
                }
            };

            Array.from(document.getElementsByClassName('video-wrapper')).forEach(function (item) {
                videoMethods.renderVideoPlayButton(item)
            });
		}
	};
	MobileGridSlider = {
		init: function () {
			function createIndicators() {
				$(counter).each(function (index) {
					var indicator = '<li data-target="#carousel-' + id + '" data-slide-to="' + index + '"></li>';
					indicators.push(indicator);
				});
				$.each(indicators, function (i, val) {
					indicatorContainer.append(val);
				});
			}

			function createItems() {
				$(counter).each(function () {
					var el = itemcontainer + $(this).html() + '</div>';
					elements.push(el)
				});
				$.each(elements, function (i, val) {
					sliderContainer.append(val);
				});
			}


			if (/Android|webOS|iPhone|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
				var grid = $('.grid-element'),
					counter = $(grid).find($('.counter')),
					first = counter.first(),
					itemcontainer = '<div class="carousel-item">',
					elements = [],
					indicators = [],
					id = Math.floor(Math.random() * 10000) + 1,
					sliderContainer = $('<div/>'),
					indicatorContainer = $('<div/>'),
					sliderStart =
						'<div class="mobile-slider">' +
						'<div id="carousel-' + id + '" class="carousel slide counter" data-ride="carousel" data-interval="5000"> ' +

						'<div class="carousel-inner mobile-inner">',
					sliderEnd =
						'</div>' +
						'</div>' +
						'</div>' +
						'</div>',
					indicatorStart = '<ol class="carousel-indicators">',
					indicatorEnd = '</ol>';

				//Create Indicators -> Push x times $counter elements into array indicators
				createIndicators();

				//Create items -> Push x times $counter elements into array elements
				createItems();

				var slider = sliderStart + sliderContainer.html() + sliderEnd,
					indicatorSlide = indicatorStart + indicatorContainer.html() + indicatorEnd;
				$(first).parent().append(slider)

				var inner = $('.mobile-slider').find('#carousel-' + id).find('.carousel-inner');
				$(inner).parent().append(indicatorSlide);
				$('.mobile-slider .carousel-item').first().addClass('active');
				$('.mobile-slider .carousel-indicators li').first().addClass('active');
				$(counter).css('display', 'none');

			}
		}
	};
	GridPosition = {
		init: function () {
			function gridchange() {
				if (($(window).width() <= 768)) {
					$('.order-md-1.grid-position-1').css({
						order:'2',
					});
					$('.order-md-2.grid-position-1').css({
						order:'4',
					});
					$('.order-md-3.grid-position-1').css({
						order:'3',
					});
					$('.order-md-1.grid-position-0').css({
						order:'4',
					});
					$('.order-md-2.grid-position-0').css({
						order:'2',
					});
					$('.order-md-3.grid-position-0').css({
						order:'3',
					});
				} else {
					$('.order-md-3.grid-position-1').css({
						order:'3',
					});
					$('.order-md-1.grid-position-1').css({
						order:'4',
					});
					$('.order-md-2.grid-position-1').css({
						order:'2',
					});
					$('.order-md-1.grid-position-0').css({
						order:'4',
					});
					$('.order-md-2.grid-position-0').css({
						order:'2',
					});
					$('.order-md-3.grid-position-0').css({
						order:'3',
					});
				}
			}
			$(document).ready(gridchange);
			$(window).resize(gridchange)
		}
	};

	Slider = {
		init: function () {
			$('.link').on('slid.bs.carousel', function () {
				var slider = $(this).find('.carousel-indicators').find('li.active').attr('data-slide-to');
				var list = $(this).find('.title-list').find('li');
				$(list).each(function () {
					var active = $(this).attr('data-slide-to');
					if (slider == active) {
						$(this).addClass('active');
					} else {
						$(this).removeClass('active');
					}
				});
			});

			var linkslider = $('.link-slider'),
				imageteaser = $('#imageteaser');

			if ($(linkslider).parent().hasClass('container')) {
				$(linkslider).parent().removeClass('container');
			}

			if ($(imageteaser).parent().hasClass('container')) {
				$(imageteaser).parent().removeClass('container');
			}

		}
	};
	ToolTip = {
		init: function () {
			$(function () {
				$('[data-toggle="tooltip"]').tooltip()
			})
		}
	};
	SecureFolderDownloads = {
		init: function () {
			let files = $('.fal-securedownload tr.subFolderFile');
			let foldernames = $('.fal-securedownload tr.foldername');

			foldernames.css('cursor', "pointer").click(function () {
				let parentObj = $(this);
				let onlyClose = false;
				if (parentObj.hasClass('opened')) {
					onlyClose = true;
				}
				SecureFolderDownloads.hideFiles(parentObj, files, foldernames);
				if (!onlyClose) {
					SecureFolderDownloads.showFiles(parentObj);
				}
			});
		},
		hideFiles: function(parentObj) {
			let id = parentObj.attr('id');
			let parentSelector = 'tr[data-parent^="' + id + '"]';
			// hide files
			$(parentSelector).hide();
			// close folder
			parentObj.removeClass('opened');
			// close subfolders
			parentObj.parents().find(parentSelector).removeClass('opened')
		},
		showFiles: function(parentObj) {
			let id = parentObj.attr('id');
			$('tr[data-parent="' + id + '"]').show('slow');
			parentObj.addClass('opened')
		}
	};
	Downloads = {
		init: function () {
			$('.downloads .download-icon').click(function () {
				$(this).toggleClass('haw-check').toggleClass('haw-check-active');
				var active = false;

				$(this).parents('form').find('.download-icon').each(function(){
					if($(this).hasClass('haw-check-active')){
					active = true;
					}
				})
				if (active){
					$('button.download').prop('disabled',false);
				}
				else{
					$('button.download').prop('disabled',true);
				}
			});

			$('#files').find('.files').hide();
			$('.downloads').find('.folder .folder').hide();
            $('.downloads .folder ').find('a.show').click(function(e){
            	e.preventDefault();
            	$('div.files').hide();
                $('.downloads .show').removeClass('active');
            	var id = $(this).attr('href');
            	$(id).show();
            	$(this).addClass('active');
			});
			$('.downloads .folder ').find('a.toggle').click(function(e){
				e.preventDefault();
				$(this).toggleClass('open');
				$(this).parent().find('> div').slideToggle();
			});
		}
	};

	Courses = {
		init: function () {
			$('.courses .dropdown').on('show.bs.dropdown', function (e) {
				$(this).find('.dropdown-menu').first().stop(true, true).slideDown(300);
			});

			$('.courses .dropdown').on('hide.bs.dropdown', function (e) {
				$(this).find('.dropdown-menu').first().stop(true, true).slideUp(200);
			});

			$('.courses .selectpicker').on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {
				$(this).next().find('.filter-option-inner .val').remove();
				$(this).next().find('.filter-option-inner').append('<span class="val">' + $(this).val() + '</span>');
			});
			$('.courses .selectpicker').on('loaded.bs.select', function (e, clickedIndex, isSelected, previousValue) {
				$(this).next().removeClass('dropdown-toggle').addClass('haw-arrow');
			});
		}
	};

	ImageSlider = {
		init: function () {
				$('div[id^="carousel-"]').on("swiperight", function() {
					$(this).carousel('prev');
				});
				$('div[id^="carousel-"]').on("swipeleft", function() {
					$(this).carousel('next');
				});


		}

	};

	Gallery = {
		init: function () {

			$('[data-fancybox="gallery"]').fancybox({
				caption: function (instance, item) {
					var caption = $(this).data('caption') || '';
					return caption;
				},

				afterLoad: function() {
					var content = $(this.opts.$orig[0]).data('content');
					$(".fancybox-image-wrap").append(content);
				}

			});


		}

	};

	Catalogues = {
		init: function () {
			$('.catalogues').find('.catalogue').hide();
			$('.catalogues').find('#cat1').show();
			$('.catalogues').find('li a').click(function (e) {
				e.preventDefault();
				$('.catalogues').find('.catalogue').hide();
				var el = $(this).attr('href');
				$(el).show();
			});
		}
	};

	CroppingVariants = {
		init: function () {
			function croppingImages() {
				var cropImage = $('.crop-image');
				cropImage.each(function () {
					var parent = $('0'),
						desktopAttr = $(this).attr('data-crop-variant-default'),
						tabletAttr = $(this).attr('data-crop-variant-tablet'),
						mobileAttr = $(this).attr('data-crop-variant-phone'),
						viewportWidth = $("body").innerWidth();

					if ($(this).parent().hasClass('fp-tableCell')) {
						parent = $(this).parent().parent();
					} else if ($(this).parent().hasClass('karussel_link')){
						parent = $(this).parent().parent();
					}else {
						parent = $(this).parent();
					}

					if (viewportWidth <= 480) {
						$(parent).css('background-image', 'url(' + mobileAttr + ')');

					} else if (viewportWidth <= 1024) {
						$(parent).css('background-image', 'url(' + tabletAttr + ')');

					} else {
						$(parent).css('background-image', 'url(' + desktopAttr + ')');

					}
				})
			}
			$(document).ready(croppingImages);
			$(window).resize(croppingImages)
		}
	};
	Accordion = {
		init: function () {
			var accordion = $('.card-header'),
				body = $('.accordion-body');

			$(accordion).click(function (event) {
				$(this).toggleClass('open');
				var accBody = $(this).parent().find($(body));
				var expanded = accBody.attr('aria-expanded');
				if (expanded == "true")
				{
					expanded = "false"
				} else {
					expanded = "true"
				}
				accBody.attr("aria-expanded", expanded);
				accBody.innerHTML = "aria-expanded =" + expanded;
				$(accBody).slideToggle(500, function () {
				});
			});

		}
	};

	Tabs = {
		init: function(){
		// We will remove the smoothState plugin in the future as soon as this is confirmed to work by the customer.
		// $('.nav-item').click(function(){
		// 	var url = $(this).data('url');
		// 	window.history.pushState('', '', url);
		// })
		}
	};

	Marginal = {
		init: function(){
			var marginal = $('#marginal'),
				flagline = $('.flagline'),
				header = $('.header');

			if (marginal.length != 0) {
				if ($(window).width() >= 768) {
					marginal.css('margin-top', flagline.outerHeight(true) + header.outerHeight(true));
				} else {
					marginal.css('margin-top', 50);
				}
			}
			$(window).resize(function () {
				if ($(window).width() >= 768) {
					marginal.css('margin-top', flagline.outerHeight(true) + header.outerHeight(true));
				} else {
					marginal.css('margin-top', 50);
				}
			});
		}
	};

	ShowSearch = {
		init: function() {
			$('#navi-main .nav-item.search').click(function () {
				if(($('#navi-main .nav-item.search').hasClass('shower'))) {
					$('#navi-main .nav-item.search').removeClass('show');
					$('#navi-main .nav-item.search').removeClass('shower');
					$('.dropdown-menus#searchbox').removeClass('show');
					$('#navi-main .dropdown-menus#searchbox').addClass('hidden');
				}
				else {
					$('#navi-main .nav-item.search').addClass('show');
					$('#navi-main .nav-item.search').addClass('shower');
					$('.dropdown-menus#searchbox').removeClass('hidden');
					$('.dropdown-menus#searchbox').addClass('show');
					$('.dropdown-menus#searchbox #ke_search_searchfield_sword').focus();
          $('.dropdown-menus#searchbox #page-search-solr-menu').focus();
				}
			});
			$('#navi-main .nav-item.search a').focus(function () {
				if(($('#navi-main .nav-item.search').hasClass('shower'))) {
					$('#navi-main .nav-item.search').removeClass('show');
					$('#navi-main .nav-item.search').removeClass('shower');
					$('.dropdown-menus#searchbox').removeClass('show');
					$('.dropdown-menus#searchbox').addClass('hidden');
				}
				else {
					$('#navi-main .nav-item.search').addClass('show');
					$('#navi-main .nav-item.search').addClass('shower');
					$('#navi-main .dropdown-menus#searchbox').removeClass('hidden');
					$('.dropdown-menus#searchbox').addClass('show');
					$('.dropdown-menus#searchbox #ke_search_searchfield_sword').focus();
          $('.dropdown-menus#searchbox #page-search-solr-menu').focus();
				}
			});
		}
	};

	AlphabetScroll = {
		init: function () {
			$('#alpha li').click(function (e) {
				$(this).addClass('alphaselect');

				$(this).siblings().removeClass('alphaselect');
			});

			$('#alpha li').mouseover(function (e) {
				$(this).addClass('alphaselect');
			});
			$('#alpha li').mouseleave(function (e) {
				$(this).removeClass('alphaselect');
			});
		}
	};

	GlossaryScroll = {
		init: function() {
			$('.frame-type-menu_glossary .pagination a').click(function (e) {
				e.preventDefault();

				// calculate offset depending on fixed navbar height
				let offset = 0;
				if ($('nav.navbar-expand-lg').is(":visible")) {
					offset = $('nav.navbar-expand-lg').outerHeight();
				} else {
					offset = $('nav.navbar-mobile').outerHeight();
				}

				let target = $(this).attr('rel');
				glob.scrollTo($('#' + target), offset);
			});
		}
	};

	Portal = {
		init: function(){
			$('.intern').click(function(e){
				var isloggedin = $('#login .form .felogin-hidden input[name*=\'logintype\']').val();
				var redirect_url = $('.intern').attr('href');
				console.log(redirect_url);
				if(isloggedin != 'logout') {
					e.preventDefault();
					$('#overlay').fadeIn(500);
					if(redirect_url) {
						$('#login .form .felogin-hidden input[name*=\'redirect_url\']').val(redirect_url);
					}
				}


			});
			$('#nav63').click(function(e){
				var isloggedin = $('#login .form .felogin-hidden input[name*=\'logintype\']').val();
				if(isloggedin != 'logout') {
					e.preventDefault();
					$('#overlay').fadeIn(500);
				}
			});

			$('#closeLogin').click(function(e){
				$('#overlay').fadeOut(500);
			});

			if ($('#p281').length) {
				this.equalHeightsUploads();
			}
		},
		equalHeightsUploads: function () {
			// find elements of CType "upload", that are inside the parent gridelemnt
			let cType = '.equal-height';
			let objects = $(cType).first().closest('.row').find(cType + ' > div');
			if (objects.length) {
				let colHeights = [];
				objects.each(function() {
					colHeights.push($(this).outerHeight());
				});

				let maxHeight = Math.max.apply(null, colHeights);
				objects.css('height', maxHeight);
			}
		}
	};


    Select = {
	    reinit: function () {
		    $(".messages-select select, .tx-atldualstudies-pi1 select,.iam-select select,.courses .custom-select,.tx-mpm-courses select, .tx-educational-courses select,.tx-mpm-partners select,.tx-mpm-internships select, .tx-mpm-consultants select,.tx-mpm-employed-database select, select.select2").chosen('destroy');
		    this.init();
	    },
        init: function(){

        	// Init Selectbox
		//	$('select.select2').select2({width: '100%', allowClear: true});

            $(".tx-atldualstudies-pi1 select").select2({ width: '100%', theme: "white" });

      //      $(".messages-select select").select2({ width: '100%', theme: "white" });

            $(".iam-select select").select2({ width: '100%', theme: "grey" });

            $('.courses .custom-select').select2({ width: '225px', theme: "white no-border" });

            $('.tx-mpm-persons select').select2({ width: '100%', theme: "white" });

            $(".tx-wv-events select, .tx-mpm-partners select, .tx-mpm-courses select, .tx-educational-courses select, .tx-mpm-projects select, .tx-mpm-internships select,.tx-mpm-consultants select").select2({ width: '100%', theme: "white",  allowClear: true, dropdownCssClass: "filter-dropdown"});

            $('.tx-mpm-employed-database select').select2({ width: '225px', theme: "white" });

            // Beim resize ausführen
            glob.win.resize(function () {
              //  selectWidth();
                selectcut(1);
            });


			// Beim ersten laden
            selectcut(0);
           // selectWidth();


			//Breite des Dropdowns wechseln
            function selectWidth() {
				$(".tx-wv-events select, .tx-mpm-courses select, .tx-mpm-projects select, .tx-mpm-partners select, .tx-mpm-consultants select,.tx-mpm-internships select").select2({ width: '255px', theme: "white", maximumSelectionLength: 2, dropdownCssClass: 'aaa',
					allowClear: true });
                if (glob.winW < 1200) {
                    $(".tx-wv-events select, .tx-mpm-courses select, .tx-educational-courses select, .tx-mpm-projects select, .tx-mpm-partners select, .tx-mpm-consultants select,.tx-mpm-internships select").select2({ width: '289px', theme: "white", maximumSelectionLength: 2,
                        allowClear: true });
                }if (glob.winW < 992) {
                    $(".tx-wv-events select, .tx-mpm-courses select, .tx-educational-courses select, .tx-mpm-projects select, .tx-mpm-partners select, .tx-mpm-consultants select,.tx-mpm-internships select").select2({ width: '330px', theme: "white", maximumSelectionLength: 2,
                        allowClear: true });
                }if (glob.winW < 768) {
                    $(".tx-wv-events select, .tx-mpm-courses select, .tx-educational-courses select, .tx-mpm-projects select, .tx-mpm-partners select, .tx-mpm-consultants select,.tx-mpm-internships select").select2({ width: '239px', theme: "white", maximumSelectionLength: 2,
                        allowClear: true });
                }if ((glob.winW < 576) && (glob.winW > 573)) {
                    $(".tx-wv-events select, .tx-mpm-courses select, .tx-educational-courses select, .tx-mpm-projects select, .tx-mpm-partners select, .tx-mpm-consultants select,.tx-mpm-internships select").select2({ width: '257px', theme: "white", maximumSelectionLength: 2,
                        allowClear: true });
                }if ((glob.winW <= 573) && (glob.winW >= 570)){
                    $(".tx-wv-events select, .tx-mpm-courses select, .tx-educational-courses select, .tx-mpm-projects select, .tx-mpm-partners select, .tx-mpm-consultants select,.tx-mpm-internships select").select2({ width: '256px', theme: "white", maximumSelectionLength: 2,
                        allowClear: true });
                }if ((glob.winW <= 571) && (glob.winW >= 570)){
                    $(".tx-wv-events select, .tx-mpm-courses select, .tx-educational-courses select, .tx-mpm-projects select, .tx-mpm-partners select, .tx-mpm-consultants select,.tx-mpm-internships select").select2({ width: '255px', theme: "white", maximumSelectionLength: 2,
                        allowClear: true });
                }if ((glob.winW <= 569 && glob.winW >= 566)){
                    $(".tx-wv-events select, .tx-mpm-courses select, .tx-educational-courses select, .tx-mpm-projects select, .tx-mpm-partners select, .tx-mpm-consultants select,.tx-mpm-internships select").select2({ width: '253px', theme: "white", maximumSelectionLength: 2,
                        allowClear: true });
                }if (glob.winW <= 565) {
					$(".tx-wv-events select, .tx-mpm-courses select, .tx-educational-courses select, .tx-mpm-projects select, .tx-mpm-partners select,.tx-mpm-consultants select, .tx-mpm-internships select").select2({ width: '252px', theme: "white", maximumSelectionLength: 2,
						allowClear: true });
				}if (glob.winW <= 563) {
					$(".tx-wv-events select, .tx-mpm-courses select, .tx-educational-courses select, .tx-mpm-projects select, .tx-mpm-partners select,.tx-mpm-consultants select, .tx-mpm-internships select").select2({ width: '251px', theme: "white", maximumSelectionLength: 2,
						allowClear: true });
				}if (glob.winW <= 561) {
					$(".tx-wv-events select, .tx-mpm-courses select, .tx-educational-courses select, .tx-mpm-projects select, .tx-mpm-partners select,.tx-mpm-consultants select, .tx-mpm-internships select").select2({ width: '250px', theme: "white", maximumSelectionLength: 2,
						allowClear: true });
				}if (glob.winW <= 560) {
                    $(".tx-wv-events select, .tx-mpm-courses select, .tx-educational-courses select, .tx-mpm-projects select, .tx-mpm-partners select, .tx-mpm-consultants select,.tx-mpm-internships select").select2({ width: '249px', theme: "white", maximumSelectionLength: 2,
                        allowClear: true });
                }if ((glob.winW >= 100) && (glob.winW <= 558)) {
                    $(".tx-wv-events select, .tx-mpm-courses select, .tx-educational-courses select, .tx-mpm-projects select, .tx-mpm-partners select,.tx-mpm-consultants select, .tx-mpm-internships select").select2({ width: '100%', theme: "white", maximumSelectionLength: 2,
                        allowClear: true });
                }
				// else {
                //     $(".tx-mpm-courses select, .tx-mpm-projects select").select2({ width: '261px', theme: "white", maximumSelectionLength: 2,
                //         allowClear: true });
                // }
			}


			// Ausgewählten Text abschneiden
            function selectcut(opt) {
                setTimeout(
                    function()
                    {
                // $('.tx-mpm-projects .select2-selection__rendered').each(function() {
                //     var text = $(this).text();
                //     var count = text.length;
                //     var maxCount = 16;
				//
                //     if (glob.winW < 768) {
                //         maxCount = 25;
				// 	}
				//
                //     if (count > maxCount) {
                //     	$(this).addClass('cutted');
                //         text = text.slice(opt, maxCount).concat(" ...");
				//
                //         var ifexist = $(this).find('.text').length;
				//
                //         if (ifexist < 1) {
                //             $(this).append('<span class="text">'+text+'</span>');
				// 		}
				// 		$(this).find('.select2-selection__placeholder').fadeOut();
				//
				//
                //     } else {
                //         $(this).removeClass('cutted');
                //         //$(this).find('.select2-selection__placeholder').fadeIn();
				// 	}
                // });
            }, 100);
			};

            // Nach Auswahl Text abschneiden
            $('.tx-wv-events select, .tx-mpm-courses select, .tx-educational-courses select, .tx-mpm-projects select, .tx-mpm-partners select,.tx-mpm-consultants select, .tx-mpm-internships select').on("select2:selecting", function() {
				selectcut(1);
            });

            $('.tx-wv-events select, .tx-mpm-courses select, .tx-educational-courses select, .tx-mpm-projects select, .tx-mpm-partners select,.tx-mpm-consultants select,.tx-mpm-internships select').on("select2:close", function() {
                selectcut(0);
            });

        }

    };

    Typo3DefaultFrontendJs = {
        reinit: function () {
            var mailtoElements = document.querySelectorAll('a[data-mailto-token][data-mailto-vector]');
            var self = this;
            Array.from(mailtoElements).forEach(function(element) {
                element.addEventListener('click', function(evt) {
                    evt.preventDefault();
                    var dataset = evt.currentTarget.dataset;
                    var value = dataset.mailtoToken;
                    var offset = parseInt(dataset.mailtoVector, 10) * -1;
                    document.location.href = self.decryptString(value, offset);
                });
            });
            var openElements = document.querySelectorAll('a[data-window-url]');
            // `Array.from` for IE compatibility
            Array.from(openElements).forEach(function(element) {
                element.addEventListener('click', function(evt) {
                    evt.preventDefault();
                    var dataset = evt.currentTarget.dataset;
                    var url = dataset.windowUrl;
                    var target = dataset.windowTarget || null;
                    var features = dataset.windowFeatures || null;
                    self.windowOpen(url, target, features);
                });
            });
        },
        decryptString: function (value, offset) {
            var result = '';
            for (var i=0; i < value.length; i++) {
                var charCode = value.charCodeAt(i);
                if (charCode >= 0x2B && charCode <= 0x3A) {
                    result += this.decryptCharcode(charCode,0x2B,0x3A,offset);	/* 0-9 . , - + / : */
                } else if (charCode >= 0x40 && charCode <= 0x5A) {
                    result += this.decryptCharcode(charCode,0x40,0x5A,offset);	/* A-Z @ */
                } else if (charCode >= 0x61 && charCode <= 0x7A) {
                    result += this.decryptCharcode(charCode,0x61,0x7A,offset);	/* a-z */
                } else {
                    result += value.charAt(i);
                }
            }
            return result;
        },
        decryptCharcode: function (charCode, start, end, offset) {
            charCode = charCode + offset;
            if (offset > 0 && charCode > end) {
                charCode = start + (charCode - end - 1);
            } else if (offset < 0 && charCode < start) {
                charCode = end - (start - charCode - 1);
            }
            return String.fromCharCode(charCode);
        },
        windowOpen: function (url, target, features) {
            var windowRef = window.open(url, target, features);
            if (windowRef) {
                windowRef.focus();
            }
            return windowRef;
        }
    };


})
(window, window.document, window.jQuery);

document.addEventListener('DOMContentLoaded', function() {
  const downloadLinks = document?.querySelectorAll('.link-download');
  downloadLinks?.forEach(function(link) {
    link?.setAttribute('download', '');
  });
});

var x, i, j, l, ll, selElmnt, a, b, c;

x = document.getElementsByClassName("select-field-wrapper");
l = x.length;
const changeEvent = new Event("change");
for (i = 0; i < l; i++) {
  selElmnt = x[i].getElementsByTagName("select")[0];
  ll = selElmnt.length;

  // For each element, create a new DIV that will act as the selected item
  a = document.createElement("DIV");
  a.setAttribute("class", "select-selected");
  a.setAttribute("tabindex", "0");
  a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
  x[i].appendChild(a);

  // For each element, create a new DIV that will contain the option list
  b = document.createElement("DIV");
  b.setAttribute("class", "select-items select-hide");
  for (j = 1; j < ll; j++) {

    // For each option in the original select element, create a new DIV that will act as an option item
    c = document.createElement("DIV");
    c.innerHTML = selElmnt.options[j].innerHTML;
    c.addEventListener("click", function(e) {

        // When an item is clicked, update the original select box and the selected item
        var y, i, k, s, h, sl, yl;
        s = this.parentNode.parentNode.getElementsByTagName("select")[0];
        sl = s.length;
        h = this.parentNode.previousSibling;
        for (i = 0; i < sl; i++) {
          if (s.options[i].innerHTML == this.innerHTML) {
            s.selectedIndex = i;
            h.innerHTML = this.innerHTML;
            s.dispatchEvent(changeEvent);
            y = this.parentNode.getElementsByClassName("active-select");
            yl = y.length;
            for (k = 0; k < yl; k++) {
              y[k].removeAttribute("class");
            }
            this.setAttribute("class", "active-select");
            break;
          }
        }
        h.click();
    });
    b.appendChild(c);
  }
  x[i].appendChild(b);
  a.addEventListener("click", function(e) {
    // When the select box is clicked, close any other select boxes and open/close the current select box
    e.stopPropagation();
    closeAllSelect(this);
    this.nextSibling.classList.toggle("select-hide");
  });
}

function closeAllSelect(elmnt) {
  // A function that will close all select boxes in the document, except the current select box
  var x, y, i, xl, yl, arrNo = [];
  x = document.getElementsByClassName("select-items");
  y = document.getElementsByClassName("select-selected");
  xl = x.length;
  yl = y.length;
  for (i = 0; i < yl; i++) {
    if (elmnt == y[i]) {
      arrNo.push(i)
    }
  }
  for (i = 0; i < xl; i++) {
    if (arrNo.indexOf(i)) {
      x[i].classList.add("select-hide");
    }
  }
}

// If the user clicks anywhere outside the select box, then close all select boxes
document.addEventListener("click", closeAllSelect);

function initializeSuggest(inputId, dropdownListClass) {
  const searchInput = document.getElementById(inputId);
  const dropdownList = document.querySelector(`.${dropdownListClass}`);
  let selectedSuggestionIndex = -1;
  let suggestions = [];
  // let documents = [];

  async function fetchData(value) {
    const solrUrl = '/?type=7384';
    const form = new FormData();
    form.append('tx_solr[queryString]', value);
    await fetch(solrUrl, {
      method: 'POST',
      body: form,
    })
      .then(response => {
        if (!response.ok || response.status !== 200) {
          throw new Error('Network response was not ok');
        }
        return response.json();
      })
      .then(data => {
        suggestions = Object.keys(data.suggestions);
        // documents = data.documents;
      });
  }

  const updateDropdown = () => {
    const inputValue = searchInput.value.toLowerCase();

    const filteredSuggestions =
      suggestions ||
      suggestions.filter(suggestion =>
        suggestion.toLowerCase().includes(inputValue)
      );
    // const filteredPageLinks =
    //   documents ||
    //   documents.filter(doc => doc.toLowerCase().includes(inputValue));

    dropdownList.innerHTML = '';

    if (filteredSuggestions.length > 0) {
      suggestions.forEach((suggestion, index) => {
        const listItem = document.createElement('li');
        listItem.classList.add('dropdown-item');
        listItem.setAttribute('role', 'option');
        listItem.addEventListener('click', () => {
          searchInput.value = suggestion;
          searchInput.form.submit();
          dropdownList.style.display = 'none';

        });

        // Create a span for the matched part and apply the highlight class
        const matchIndex = suggestion.toLowerCase().indexOf(inputValue);
        if (matchIndex !== -1) {
          const prefix = suggestion.substring(0, matchIndex);
          const match = suggestion.substring(
            matchIndex,
            matchIndex + inputValue.length
          );
          const suffix = suggestion.substring(matchIndex + inputValue.length);

          listItem.innerHTML = `${prefix}<b class="highlight">${match}</b>${suffix}`;
        } else {
          listItem.textContent = suggestion;
        }

        dropdownList.appendChild(listItem);

        if (index === selectedSuggestionIndex) {
          listItem.classList.add('focus');
        }
      });
    }

    // if (filteredPageLinks.length > 0) {
    //   filteredPageLinks.forEach(({ link, title }, index) => {
    //     const listItem = document.createElement('li');
    //     listItem.classList.add('dropdown-item');
    //     const linkItem = document.createElement('a');
    //     linkItem.setAttribute('href', link);

    //     linkItem.textContent = `-> ${title}`;
    //     listItem.innerHTML = linkItem.outerHTML;
    //     dropdownList.appendChild(listItem);

    //     // Highlight the selected suggestion
    //     if (index === selectedSuggestionIndex) {
    //       listItem.classList.add('focus');
    //     }
    //   });
    // }

    // Show or hide the dropdown based on whether there are suggestions or page links
    if (suggestions.length > 0) {

      dropdownList.style.display = 'block';
    } else {
      dropdownList.style.display = 'none';
    }
  };

  // Event listeners for input changes
  searchInput.addEventListener('input', async () => {
    selectedSuggestionIndex = -1; // Reset selected index on input change
    if (searchInput.value.length > 1) {
      await fetchData(searchInput.value);
      updateDropdown();
    } else {
      dropdownList.style.display = 'none';
    }
  });

  searchInput.addEventListener('focus', updateDropdown);
  searchInput.addEventListener('blur', () => {
    // Delay hiding the dropdown to allow clicking on it
    setTimeout(() => {
      dropdownList.style.display = 'none';
    }, 200);
  });

  // Keyboard navigation
  searchInput.addEventListener('keydown', e => {
    if (dropdownList.style.display !== 'none') {
      const dropdownItems = document.querySelectorAll(
        `.${dropdownListClass} .dropdown-item`
      );

      switch (e.key) {
        case 'ArrowUp':
          e.preventDefault();
          selectedSuggestionIndex = Math.max(0, selectedSuggestionIndex - 1);
          break;
        case 'ArrowDown':
          e.preventDefault();
          selectedSuggestionIndex = Math.min(
            dropdownItems.length - 1,
            selectedSuggestionIndex + 1
          );
          break;
        case 'Enter':
          if (selectedSuggestionIndex !== -1) {
            searchInput.value =
              dropdownItems[selectedSuggestionIndex].textContent;
            searchInput.form.submit();
            dropdownList.style.display = 'none';
          }
          break;
        case 'Esc':
          e.preventDefault();
          searchInput.value = '';
          dropdownList.style.display = 'none';
          break;
        default:
          break;
      }

      // Remove focus class from all items and add it to the selected item
      dropdownItems.forEach((item, index) => {
        if (index === selectedSuggestionIndex) {
          item.classList.add('focus');
        } else {
          item.classList.remove('focus');
        }
      });
    }
  });
}
var searchInput = document.getElementById('page-search-solr');
if (searchInput) {
  initializeSuggest('page-search-solr', 'suggest-list');
}
initializeSuggest('page-search-solr-menu', 'suggest-list-menu');
initializeSuggest('page-search-solr-menu-mobile', 'suggest-list-menu-mobile');

setTimeout(function () {
  const FilterSelectCourses = document.querySelectorAll('.select2-selection--single');
  FilterSelectCourses.forEach(function (filterSelects) {
    filterSelects.addEventListener('click', function() {
      const selectOptions = document.querySelectorAll('.select2-results__option');

      selectOptions.forEach(function (option) {
        if (option.innerHTML.indexOf('Faculty') !== -1 || option.innerHTML.indexOf('Fakultät') !== -1) {
        option.classList.add('faculty-option');
        }
      })
    })
  })
},20);

$(function(){
		var datenschutz ='<div class="powermail_fieldwrap powermail_fieldwrap_type_check powermail_fieldwrap_marker_ds  "><div class="powermail_legend" style="margin:15px 0 0 15px;font-size:1.5rem">Datenschutz<span class="mandatory">*</span></div><div class="powermail_field"><div class="checkbox "><input type="hidden" name="tx_powermail_pi1[field][ds]" value="" /><input required="required" aria-required="true" data-parsley-required-message="Dieses Feld muss ausgef&uuml;llt werden!" data-parsley-errors-container=".powermail_field_error_container_ds" data-parsley-class-handler=".powermail_fieldwrap_ds div:first &gt; div" class="powermail_checkbox powermail_checkbox_ds" id="powermail_field_ds_1" type="checkbox" name="tx_powermail_pi1[field][ds][]" value="Die Datenschutzbestimmungen habe ich gelesen und stimme diesen zu." /><label> Die <a href="https://www.haw-hamburg.de/datenschutz" target="_blank" class="link-internal">Datenschutzbestimmungen</a> habe ich gelesen und stimme diesen zu.</label></div><div class="powermail_field_error_container powermail_field_error_container_ds"></div></div></div>';
		$(datenschutz).insertBefore( ".powermail_fieldwrap_type_submit" );
});
